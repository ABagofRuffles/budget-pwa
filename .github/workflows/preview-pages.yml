name: Preview Pull Requests

on:
  pull_request_target:
    # Run from the default branch context so the protected github-pages environment accepts the deployment.
    types: [opened, synchronize, reopened, ready_for_review]

permissions:
  contents: read
  pages: write
  id-token: write
  pull-requests: write

concurrency:
  # Ensure only one preview build runs per pull request so updates replace older previews.
  group: 'preview-${{ github.event.pull_request.number }}'
  cancel-in-progress: true

jobs:
  build:
    name: Build static site
    # Skip forked pull requests to avoid running untrusted code with elevated permissions.
    if: github.event.pull_request.head.repo.fork == false
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        # Use the pull request head so the preview matches the code under review.
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Configure Pages
        # Prepares the workflow to upload a static site artifact for GitHub Pages.
        uses: actions/configure-pages@v5

      - name: Upload static site
        # Upload the root of the repository because this project is a static PWA.
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./

  deploy:
    name: Publish preview
    needs: build
    if: github.event.pull_request.head.repo.fork == false
    runs-on: ubuntu-latest
    environment:
      # The Deploy Pages action always publishes to the built-in github-pages environment.
      name: github-pages
      url: ${{ steps.preview.outputs.preview_url || steps.preview.outputs.page_url }}

    steps:
      - name: Deploy preview
        id: preview
        # Publish an ephemeral preview using the official Deploy Pages action in preview mode (free for public repos).
        uses: actions/deploy-pages@v4
        with:
          # Setting preview to true tells Deploy Pages to create an ephemeral pull request preview instead of publishing to production.
          preview: true

      - name: Share preview link on the pull request
        # Comment the preview URL so it is easy to open from a phone or any device.
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const core = require('@actions/core');
            const previewUrl = '${{ steps.preview.outputs.preview_url || steps.preview.outputs.page_url }}';
            const marker = '<!-- preview-pages-bot -->';

            if (!previewUrl) {
              core.setFailed('The Deploy Pages action did not return a preview URL.');
              return;
            }

            const lines = [
              marker,
              `ðŸš€ A preview of this pull request is ready: ${previewUrl}`,
              '',
              '**How to view**',
              'â€¢ Tap the link above from your phone, or',
              'â€¢ Open the "Deployments" panel on this pull request and choose **View deployment**.',
              '',
              'This preview updates automatically whenever you push new commits to this PR.',
            ];
            const body = lines.join('\n');

            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              per_page: 100,
            });

            const existing = comments.find((comment) => comment.body?.includes(marker) && comment.user?.type === 'Bot');

            if (existing) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existing.id,
                body,
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body,
              });
            }
