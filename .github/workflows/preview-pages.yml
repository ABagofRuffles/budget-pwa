name: PR Preview (GitHub Pages)

on:
  # Run this workflow whenever a pull request targets main.
  # Using 'pull_request_target' allows deployments to environments restricted to main.
  pull_request_target:
    types: [opened, synchronize, reopened, ready_for_review]

permissions:
  contents: read           # Read repo contents
  pages: write             # Deploy to GitHub Pages
  id-token: write          # Needed for OIDC authentication
  pull-requests: write     # To post preview comments

concurrency:
  # Limit concurrent preview builds per PR ‚Äî cancels older runs when new commits arrive.
  group: pages-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  build:
    # Only run for PRs within this repo (not forks)
    if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout PR‚Äôs commit
      - name: Checkout PR HEAD
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      # 2Ô∏è‚É£ Setup Node without caching (forces skip of lockfile detection)
      - name: Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: false          # üëà disable caching explicitly

      # 3Ô∏è‚É£ Install dependencies and build your project
      #     Works even if you don‚Äôt have a package-lock.json
      - name: Install & build
        env:
          CI: true
        run: |
          npm install --no-audit --no-fund
          npm run build

      # 4Ô∏è‚É£ Upload build output for deployment
      #     Replace ./dist with your build directory if needed
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  deploy:
    # Wait for build to complete
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages

    steps:
      # 5Ô∏è‚É£ Prepare GitHub Pages environment
      - name: Configure Pages
        uses: actions/configure-pages@v5

      # 6Ô∏è‚É£ Deploy as a preview (temporary PR site)
      - name: Deploy Preview
        id: deploy
        uses: actions/deploy-pages@v4
        with:
          preview: true

      # 7Ô∏è‚É£ Post a nice comment with the preview URL
      - name: Comment preview link
        uses: actions/github-script@v7
        with:
          script: |
            const url = '${{ steps.deploy.outputs.preview_url }}'
            if (url) {
              github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: `**‚ú® Live Preview Ready!**\n\nüîó [View Preview Site](${url})`
              })
            }