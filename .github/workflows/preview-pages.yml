name: PR Preview (GitHub Pages)

on:
  # Run this workflow when someone opens, updates, or reopens
  # a pull request targeting your main branch.
  # 'pull_request_target' executes in the context of the base branch (main),
  # which satisfies GitHub Pages environment protection rules.
  pull_request_target:
    types: [opened, synchronize, reopened, ready_for_review]

permissions:
  contents: read           # Allows read access to repository contents
  pages: write             # Grants permission to publish to GitHub Pages
  id-token: write          # Enables OpenID Connect authentication (required for Pages)
  pull-requests: write     # Lets this workflow post comments on pull requests

concurrency:
  # This ensures there‚Äôs only one preview deployment per PR.
  # If new commits are pushed to the same PR, older runs are canceled.
  group: pages-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  build:
    # Security check: only run this workflow for PRs created in this same repo.
    # This prevents untrusted forked repos from running your deployment code.
    if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
    runs-on: ubuntu-latest  # GitHub's latest Ubuntu runner image

    steps:
      # 1Ô∏è‚É£ Check out the pull request branch at the exact commit being tested.
      - name: Checkout PR HEAD
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      # 2Ô∏è‚É£ Install Node.js ‚Äî version 20 chosen for compatibility and stability.
      #     We removed caching since you don‚Äôt have a package-lock.json file.
      - name: Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # 3Ô∏è‚É£ Install dependencies and build your project.
      #     `npm install` works even without a lockfile.
      #     `npm run build` should create your final static files.
      - name: Install & build
        env:
          CI: true                     # Forces production mode for consistency
        run: |
          npm install --no-audit --no-fund
          npm run build

      # 4Ô∏è‚É£ Upload the built output so the deploy job can access it.
      #     Replace "./dist" with your actual build output folder if needed.
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist                 # e.g., "./build" for React apps

  deploy:
    # Wait for the build job to finish successfully
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages              # Must match your GitHub Pages environment name

    steps:
      # 5Ô∏è‚É£ Configure GitHub Pages (prepares environment settings)
      - name: Configure Pages
        uses: actions/configure-pages@v5

      # 6Ô∏è‚É£ Deploy the preview version of your site.
      #     The "preview: true" flag ensures this is a temporary preview deployment,
      #     separate from your main production site.
      - name: Deploy Preview
        id: deploy
        uses: actions/deploy-pages@v4
        with:
          preview: true

      # 7Ô∏è‚É£ Post a friendly, formatted comment on the PR with the preview link.
      #     The URL is auto-generated by GitHub Pages for that PR.
      - name: Comment preview link
        uses: actions/github-script@v7
        with:
          script: |
            const url = '${{ steps.deploy.outputs.preview_url }}'
            if (url) {
              github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: `**‚ú® Live Preview Ready!**\n\nüîó [View Preview Site](${url})`
              })
            }