name: Preview Pull Requests

on:
  pull_request:
    # Build and deploy a fresh preview for every PR update so reviewers can test changes before merging.
    types: [opened, synchronize, reopened, ready_for_review]

permissions:
  contents: read
  pages: write
  id-token: write
  pull-requests: write

concurrency:
  # Ensure only the latest commit for a PR keeps running so outdated previews are cancelled automatically.
  group: 'preview-${{ github.event.pull_request.number }}'
  cancel-in-progress: true

jobs:
  preview:
    name: Build and deploy preview
    # Skip forked pull requests because the workflow needs elevated permissions to publish previews.
    if: github.event.pull_request.head.repo.fork == false
    runs-on: ubuntu-latest
    environment:
      # Attach the deployment to the built-in github-pages environment so the preview link appears in the PR UI.
      name: github-pages
      url: ${{ steps.preview.outputs.preview_url || steps.preview.outputs.page_url }}

    steps:
      - name: Checkout pull request
        # Pull the PR head commit so the preview reflects the exact changes under review.
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Configure Pages
        # Prepare the workflow to upload the static PWA bundle.
        uses: actions/configure-pages@v5

      - name: Upload static site
        # Publish everything in the repository root as the Pages artifact.
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./

      - name: Deploy preview
        id: preview
        # Deploy an ephemeral preview following the guidance from https://github.com/marketplace/actions/preview-pages.
        uses: actions/preview-pages@v1

      - name: Share preview link on the pull request
        # Comment the preview URL (and instructions) so it is easy to open from a phone.
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const core = require('@actions/core');
            const previewUrl = '${{ steps.preview.outputs.preview_url || steps.preview.outputs.page_url }}';
            const marker = '<!-- preview-pages-bot -->';

            if (!previewUrl) {
              core.setFailed('The preview-pages action did not return a preview URL.');
              return;
            }

            const lines = [
              marker,
              `ðŸš€ A preview of this pull request is ready: ${previewUrl}`,
              '',
              '**How to view**',
              'â€¢ Tap the link above from your phone, or',
              'â€¢ Open the "Deployments" panel on this pull request and choose **View deployment**.',
              '',
              'This preview rebuilds automatically whenever you push new commits to this PR.',
            ];
            const body = lines.join('\n');

            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              per_page: 100,
            });

            const existing = comments.find((comment) => comment.body?.includes(marker) && comment.user?.type === 'Bot');

            if (existing) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existing.id,
                body,
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body,
              });
            }
